rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // ユーザーが認証されているかチェック
    function isAuthenticated() {
      return request.auth != null;
    }

    // ユーザーが自分のドキュメントにアクセスしているかチェック
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // usersコレクション
    match /users/{userId} {
      allow read, write: if isOwner(userId);
    }

    // entriesコレクション
    match /entries/{entryId} {
      allow read, delete: if isAuthenticated() &&
        resource.data.userId == request.auth.uid;

      allow create: if isAuthenticated() &&
        request.resource.data.userId == request.auth.uid &&
        request.resource.data.content is string &&
        request.resource.data.createdAt is timestamp &&
        request.resource.data.updatedAt is timestamp;

      allow update: if isAuthenticated() &&
        resource.data.userId == request.auth.uid &&
        request.resource.data.userId == request.auth.uid;
    }

    // entryExportsコレクション
    match /entryExports/{exportId} {
      allow read: if isAuthenticated() &&
        resource.data.userId == request.auth.uid;

      allow create: if isAuthenticated() &&
        request.resource.data.userId == request.auth.uid &&
        request.resource.data.rangeStart is timestamp &&
        request.resource.data.rangeEnd is timestamp &&
        request.resource.data.createdAt is timestamp;

      allow update, delete: if isAuthenticated() &&
        resource.data.userId == request.auth.uid;
    }
  }
}
